variables:
  CARGO_HOME: "$CI_PROJECT_DIR/toolchains/cargo"
  RUSTUP_HOME: "$CI_PROJECT_DIR/toolchains"
  GIT_CLEAN_FLAGS: "-ffdx --exclude toolchains"

stages:
  - lint
  - build
  - test
  - deploy

# AMD job configuration template
.job_template_amd:
  image: rustlang/rust:nightly
  variables:
    KUBERNETES_NODE_SELECTOR_INSTANCE_TYPE: "ulvt-node-pool=ulvt-c6i-large"
    KUBERNETES_CPU_REQUEST: "1"
    KUBERNETES_MEMORY_REQUEST: "4Gi"
    GIT_CLONE_PATH: "$CI_BUILDS_DIR/binius_amd"
  tags:
    - k8s

# ARM job configuration template
.job_template_arm:
  image: rustlang/rust:nightly
  variables:
    KUBERNETES_NODE_SELECTOR_INSTANCE_TYPE: "ulvt-node-pool=ulvt-t4g-xlarge"
    KUBERNETES_NODE_SELECTOR_ARCH: 'kubernetes.io/arch=arm64'
    KUBERNETES_CPU_REQUEST: "2"
    KUBERNETES_MEMORY_REQUEST: "4Gi"
    GIT_CLONE_PATH: "$CI_BUILDS_DIR/binius_arm"
  before_script:
    - if [ "$(uname -m)" != "aarch64" ]; then echo "This job is intended to run on ARM architecture only."; exit 1; fi
  tags:
    - k8s

# Linting jobs
copyright-check:
  extends: .job_template_amd
  stage: lint
  script:
    - ./scripts/check_copyright_notice.sh

cargofmt:
  extends: .job_template_amd
  stage: lint
  script:
    - cargo fmt --check

clippy:
  extends: .job_template_amd
  stage: lint
  script:
    - cargo clippy --all --all-features --tests --benches --examples -- -D warnings

# Building jobs
build-debug-amd:
  extends: .job_template_amd
  stage: build
  script:
    - cargo build --tests --benches --examples
  artifacts:
    paths:
      - Cargo.lock
    expire_in: 1 day

build-debug-arm:
  extends: .job_template_arm
  stage: build
  script:
    - cargo build --tests --benches --examples
  artifacts:
    paths:
      - Cargo.lock
    expire_in: 1 day

.test_job_template_amd:
  extends: .job_template_amd
  dependencies:
    - build-debug-amd

.test_job_template_arm:
  extends: .job_template_arm
  dependencies:
    - build-debug-arm

unit-test-amd:
  extends: .test_job_template_amd
  script:
    - ./scripts/run_tests_and_examples.sh

unit-test-arm:
  extends: .test_job_template_arm
  script:
    - ./scripts/run_tests_and_examples.sh

unit-test-single-threaded-amd:
  extends: .test_job_template_amd
  script:
    - RAYON_NUM_THREADS=1  ./scripts/run_tests_and_examples.sh

unit-test-single-threaded-arm:
  extends: .test_job_template_arm
  script:
    - RAYON_NUM_THREADS=1 ./scripts/run_tests_and_examples.sh

unit-test-native-amd:
  extends: .test_job_template_amd
  script:
    - RUSTFLAGS="-C target-cpu=native" ./scripts/run_tests_and_examples.sh

unit-test-native-arm:
  extends: .test_job_template_arm
  script:
    - RUSTFLAGS="-C target-cpu=native" ./scripts/run_tests_and_examples.sh

# Documentation and pages jobs
build-docs:
  extends: .job_template_amd
  stage: build
  script:
    - cargo doc --no-deps
  artifacts:
    paths:
      - target/doc
    expire_in: 1 week

pages:
  extends: .job_template_amd
  stage: deploy
  dependencies:
    - build-docs
  script:
    - mv target/doc public
    - echo "/ /binius_core 302" > public/_redirects
  artifacts:
    paths:
      - public
  only:
    refs:
      - main # Deploy for every push to the main branch, for now

